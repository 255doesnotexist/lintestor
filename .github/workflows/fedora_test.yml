name: Fedora Test

on:
  schedule:
    - cron: '30 2 * * 1'  # 每周一凌晨2:30运行
  workflow_dispatch:  # 允许手动触发

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PRINT_SSH_MSG: 1
      RUST_LOG: debug
    permissions:
      contents: write
    steps:
    - name: Checkout dirty branch
      uses: actions/checkout@v2
      with:
        ref: 'dirty'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y curl wget git
        sudo apt-get install -y libssl-dev # lintestor build dependencies
        sudo apt-get install -y qemu-utils qemu-system-x86 qemu-system-misc opensbi u-boot-qemu
        sudo apt-get install -y sshpass # for sshpass
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable

    - name: Build and Install QEMU RISC-V (v9.2.2)
      shell: bash
      run: |
        echo "Installing system dependencies..."
        sudo apt-get update
        sudo apt-get install -y \
          git \
          wget \
          curl \
          build-essential \
          ninja-build \
          pkg-config \
          python3 \
          python3-pip \
          python3-venv \
          libglib2.0-dev \
          libpixman-1-dev \
          libslirp-dev \
          zlib1g \
          zlib1g-dev \
          libfdt-dev \
          libcap-ng-dev \
          libattr1-dev \
          libnfs-dev \
          libseccomp-dev

        echo "Setting up Python virtual environment..."
        python3 -m venv qemu-venv
        source qemu-venv/bin/activate
        pip install --upgrade pip
        pip install tomli tomli-w ninja meson

        echo "Downloading QEMU source (v9.2.2)..."
        mkdir -p qemu-source
        wget -q https://download.qemu.org/qemu-9.2.2.tar.xz
        tar xf qemu-9.2.2.tar.xz -C qemu-source --strip-components=1
        rm qemu-9.2.2.tar.xz

        echo "Configuring QEMU..."
        mkdir -p qemu-source/build
        cd qemu-source/build
        ../configure \
          --target-list=riscv64-softmmu \
          --disable-docs \
          --prefix=${{ github.workspace }}/qemu-install

        if [ $? -ne 0 ]; then
          echo "Configure failed. Checking for config.log..."
          if [ -f config.log ]; then
            cat config.log
          fi
          exit 1
        fi

        echo "Building QEMU..."
        make -j$(nproc) qemu-system-riscv64

        echo "Installing QEMU..."
        make install

        echo "Verifying installation..."
        ${{ github.workspace }}/qemu-install/bin/qemu-system-riscv64 --version
        echo "✅ QEMU installed successfully!"

    - name: Test QEMU Installation
      run: |
        ${{ github.workspace }}/qemu-install/bin/qemu-system-riscv64 --version
        whereis qemu-system-riscv64
      
    - name: Test QEMU Installation Path
      run: |
        ${{ github.workspace }}/qemu-install/bin/qemu-system-riscv64 --version
        whereis qemu-system-riscv64

    - name: Restore QEMU image cache
      id: cache-qemu-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          /tmp/runner/work/lintestor/fedora
        key: fedora-qemu-system-riscv64
        enableCrossOsArchive: true  # 跨操作系统缓存
        fail-on-cache-miss: false  # 缓存未命中时继续执行
    
    - name: Setup Fedora QEMU env for RISC-V
      if: steps.cache-qemu-restore.outputs.cache-hit != 'true'
      run: |
        PATH=${{ github.workspace }}/qemu-install/bin:$PATH
        export PATH
        mkdir ../fedora
        cp ./fedora/init.sh ../fedora
        cd ../fedora
        chmod +x init.sh
        ./init.sh
        ls -l # 展示文件结构
        cd ../lintestor  # 回到项目目录
        ls -l # 再次展示文件结构
    
    - name: Install & Run Lintestor
      run: |
        PATH=${{ github.workspace }}/qemu-install/bin:$PATH
        export PATH
        ls -l ../ # 展示上级文件结构
        ls -l ../fedora # 展示文件结构
        ls -l . # 展示本级结构
        cargo install lintestor
        LATEST_BINARY=lintestor
        $LATEST_BINARY --test --aggr --summ -d fedora
        rm .gitignore
    
    - name: Save QEMU image cache
      if: steps.cache-qemu-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4  # 使用独立的保存操作
      with:
        path: |
          /tmp/runner/work/lintestor/fedora
        key: fedora-qemu-system-riscv64

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: fedora-test-results
        path: |
          reports.json
          summary.md
    
    - name: Commit reports
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "test(report): Fedora weekly test reports update"
        file_pattern: |
          **/*.json
          **/*/*.json
          summary.md
          reports.md