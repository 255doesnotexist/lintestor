name: Debian Test
on:
  schedule:
    - cron: '0 2 * * 1'  # 每周一凌晨2点运行
  workflow_dispatch:  # 允许手动触发

jobs:
  test:
    runs-on: [self-hosted, linux]
    env:
      PRINT_SSH_MSG: 1
      RUST_LOG: debug
      SEGMENT_DOWNLOAD_TIMEOUT_MINS: 20  # 增加下载超时时间到20分钟
    permissions:
      contents: write
    steps:
    - name: Checkout dirty branch
      uses: actions/checkout@v2
      with:
        ref: 'dirty'
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libssl-dev # lintestor build dependencies
        sudo apt-get install -y qemu-utils qemu-system-x86 qemu-system-misc opensbi u-boot-qemu
        sudo apt-get install -y sshpass

    - name: Restore QEMU image cache
      id: cache-qemu-restore
      uses: actions/cache/restore@v4
      with:
        path: |
          ../dqib_riscv64-virt
        key: debian-qemu-system-riscv64
        enableCrossOsArchive: true  # 跨操作系统缓存
        fail-on-cache-miss: false  # 缓存未命中时继续执行
    
    - name: Setup Debian QEMU env for RISC-V
      if: steps.cache-qemu-restore.outputs.cache-hit != 'true'
      run: |
        cd ..
        wget -O rv64deb.zip "https://gitlab.com/api/v4/projects/giomasce%2Fdqib/jobs/artifacts/master/download?job=convert_riscv64-virt"
        unzip rv64deb.zip
        cd dqib_riscv64-virt
        echo 'qemu-system-riscv64 -machine virt -m 1G -smp 8 -cpu rv64 \' > boot.sh
        echo '-device virtio-blk-device,drive=hd \' >> boot.sh
        echo '-drive file=image.qcow2,if=none,id=hd \' >> boot.sh
        echo '-device virtio-net-device,netdev=net \' >> boot.sh
        echo '-netdev user,id=net,hostfwd=tcp::2222-:22 \' >> boot.sh
        echo '-bios /usr/lib/riscv64-linux-gnu/opensbi/generic/fw_jump.bin \' >> boot.sh
        echo '-kernel /usr/lib/u-boot/qemu-riscv64_smode/uboot.elf \' >> boot.sh
        echo '-object rng-random,filename=/dev/urandom,id=rng \' >> boot.sh
        echo '-device virtio-rng-device,rng=rng \' >> boot.sh
        echo '-nographic -append "root=LABEL=rootfs console=ttyS0  cmdline no4lvl"' >> boot.sh
        chmod +x boot.sh

    - name: Save QEMU image cache
      if: steps.cache-qemu-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4  # 使用独立的保存操作
      with:
        path: |
          ../dqib_riscv64-virt
        key: debian-qemu-system-riscv64
    
    - name: Install & Run Lintestor
      run: |
        cargo install lintestor
        LATEST_BINARY=lintestor
        $LATEST_BINARY --test --aggr --summ -d debian
        rm .gitignore
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: debian-test-results
        path: |
          reports.json
          summary.md
    
    - name: Commit reports
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "test(report): Debian weekly test reports update"
        file_pattern: |
          **/*.json
          **/*/*.json
          summary.md
          reports.md
